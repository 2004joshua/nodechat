# ───── Stage 1: Build React frontend ─────
FROM node:18-alpine AS ui-builder
WORKDIR /app/ui

COPY ui/package.json ui/package-lock.json ./
RUN npm ci

COPY ui/ ./
RUN npm run build

# ───── Stage 2: Build Go peer binary ─────
FROM golang:1.20-alpine AS go-builder
WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY . . 
RUN go build -o nodechat-peer ./cmd/peer

# ───── Stage 3: Final runtime image ─────
FROM alpine:3.18
WORKDIR /app

COPY --from=go-builder /app/nodechat-peer ./nodechat-peer
COPY --from=ui-builder /app/ui/build ./ui/build

EXPOSE 8080
ENTRYPOINT ["./nodechat-peer"]
